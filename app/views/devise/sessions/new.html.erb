
</br></br></br>
  <body class="signin">
                <h2>Log in</h2>
            <div class="container-signin">
             <section class="content-signin">
                <%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
                    <span class="input input--nariko">
                    <%= f.email_field :email, autofocus: true, class:"input__field input__field--nariko", type:"text"%>
                    <label  class="input__label input__label--nariko" for="email">
                  <span class="input__label-content input__label-content--nariko">Email</span>
                  </label>
                  </span> 
                    <span class="input input--nariko">
                    <%= f.password_field :password, autocomplete: "off", class:"input__field input__field--nariko", type:"password"%>
                    <label  class="input__label input__label--nariko" for="password">
                  <span class="input__label-content input__label-content--nariko">Password</span>
                  </label>
                  </span> 
                </section>
             </div>
                  <% if devise_mapping.rememberable? -%>
                    <div class="field">
                      <%= f.check_box :remember_me %>
                      <%= f.label :remember_me %>
                    </div>
                  <% end -%>

                  <div class="actions">
                    <%= f.submit "Log in" %>
                  </div>
                <% end %>

                <%= render "devise/shared/links" %>

    </body>


     <script>
      (function() {
        // trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
        if (!String.prototype.trim) {
          (function() {
            // Make sure we trim BOM and NBSP
            var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
            String.prototype.trim = function() {
              return this.replace(rtrim, '');
            };
          })();
        }

        [].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
          // in case the input is already filled..
          if( inputEl.value.trim() !== '' ) {
            classie.add( inputEl.parentNode, 'input--filled' );
          }

          // events:
          inputEl.addEventListener( 'focus', onInputFocus );
          inputEl.addEventListener( 'blur', onInputBlur );
        } );

        function onInputFocus( ev ) {
          classie.add( ev.target.parentNode, 'input--filled' );
        }

        function onInputBlur( ev ) {
          if( ev.target.value.trim() === '' ) {
            classie.remove( ev.target.parentNode, 'input--filled' );
          }
        }
      })();
    </script>
